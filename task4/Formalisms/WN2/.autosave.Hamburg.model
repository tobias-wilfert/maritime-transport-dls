{
	"csm": {
		"nodes": {
			"3": {
				"typename": {
					"type": "string",
					"value": "ControlTowerIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						507,
						517
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"13": {
								"src": {
									"type": "string",
									"value": "/Formalisms/WN2/icons/controltower.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										3,
										7
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"50": {
								"textContent": {
									"type": "string",
									"value": "T"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00bb00",
										"stroke-dasharray": "",
										"fill": "#00bb00",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({name:getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										3,
										59
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/ControlTower/3.instance"
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/ControlTowerIcon"
			},
			"4": {
				"typename": {
					"type": "string",
					"value": "SeaIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						410,
						108
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"1": {
								"src": {
									"type": "string",
									"value": "/Formalisms/WN2/icons/sea.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"34": {
								"textContent": {
									"type": "string",
									"value": "S"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00bb00",
										"stroke-dasharray": "",
										"fill": "#00bb00",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({name:getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										9,
										50
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Sea/4.instance"
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/SeaIcon"
			},
			"14": {
				"typename": {
					"type": "string",
					"value": "GeneratorIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						362,
						256
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"22": {
								"src": {
									"type": "string",
									"value": "/Formalisms/WN2/icons/generator.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"37": {
								"textContent": {
									"type": "string",
									"value": "gen"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00bb00",
										"stroke-dasharray": "",
										"fill": "#00bb00",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({name:getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										61
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Generator/14.instance"
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/GeneratorIcon"
			},
			"17": {
				"typename": {
					"type": "string",
					"value": "WaterwayIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						555,
						259
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"24": {
								"src": {
									"type": "string",
									"value": "/Formalisms/WN2/icons/waterway.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										7,
										4
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"52": {
								"textContent": {
									"type": "string",
									"value": "w_K_c1"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00bb00",
										"stroke-dasharray": "",
										"fill": "#00bb00",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({name:getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										57
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"55": {
								"textContent": {
									"type": "string",
									"value": 15
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#0000ff",
										"stroke-dasharray": "",
										"fill": "#0000ff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('length')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({length:parseInt(getAttr('textContent'))})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										4,
										84
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Waterway/17.instance"
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/WaterwayIcon"
			},
			"18": {
				"typename": {
					"type": "string",
					"value": "WaterwayIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						547,
						136
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"24": {
								"src": {
									"type": "string",
									"value": "/Formalisms/WN2/icons/waterway.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										7,
										4
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"52": {
								"textContent": {
									"type": "string",
									"value": "w_c1_S"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00bb00",
										"stroke-dasharray": "",
										"fill": "#00bb00",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({name:getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										57
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"55": {
								"textContent": {
									"type": "string",
									"value": 15
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#0000ff",
										"stroke-dasharray": "",
										"fill": "#0000ff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('length')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({length:parseInt(getAttr('textContent'))})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										4,
										84
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Waterway/18.instance"
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/WaterwayIcon"
			},
			"20": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						508.85428589050866,
						157.9600000483749
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-53.501178333522944,-96.43261479171188%",
										"0;-4.316662427102443,-26.471698178116792%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-164.6498635075757"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/20.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/WaterwayIcon/18.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/20.instance": "M560,172L508.8542858905089,157.9600000483749",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/20.instance--/Formalisms/WN2/WN2.defaultIcons/SeaIcon/4.instance": "M508.9272816545554,157.9800381012505L458.0002773747974,144.00007614210128"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"25": {
				"typename": {
					"type": "string",
					"value": "WaterwayIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						861,
						218
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"24": {
								"src": {
									"type": "string",
									"value": "/Formalisms/WN2/icons/waterway.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										7,
										4
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"52": {
								"textContent": {
									"type": "string",
									"value": "w_c1_CP"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00bb00",
										"stroke-dasharray": "",
										"fill": "#00bb00",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({name:getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										57
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"55": {
								"textContent": {
									"type": "string",
									"value": 90
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#0000ff",
										"stroke-dasharray": "",
										"fill": "#0000ff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('length')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({length:parseInt(getAttr('textContent'))})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										4,
										84
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Waterway/25.instance"
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/WaterwayIcon"
			},
			"26": {
				"typename": {
					"type": "string",
					"value": "ConfluenceIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1029,
						245
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/WN2/icons/confluence.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										6,
										6
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"48": {
								"textContent": {
									"type": "string",
									"value": "CP"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00bb00",
										"stroke-dasharray": "",
										"fill": "#00bb00",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({name:getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										62
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Confluence/26.instance"
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/ConfluenceIcon"
			},
			"28": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						984.999766390552,
						250.999644215496
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;81.3698402277073,99.93149921573936%",
										"0;-6.99350570607794,3.7007383715528905%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;2.1208511864049076"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/28.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/WaterwayIcon/25.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/28.instance": "M904,248.00000000000003L984.999766390552,250.999644215496",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/28.instance--/Formalisms/WN2/WN2.defaultIcons/ConfluenceIcon/26.instance": "M984.999766390552,250.999644215496L1065.999532781104,253.999288430992"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"29": {
				"typename": {
					"type": "string",
					"value": "WaterwayIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1258,
						270
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"24": {
								"src": {
									"type": "string",
									"value": "/Formalisms/WN2/icons/waterway.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										7,
										4
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"52": {
								"textContent": {
									"type": "string",
									"value": "w_CP_c2"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00bb00",
										"stroke-dasharray": "",
										"fill": "#00bb00",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({name:getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										57
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"55": {
								"textContent": {
									"type": "string",
									"value": 6
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#0000ff",
										"stroke-dasharray": "",
										"fill": "#0000ff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('length')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({length:parseInt(getAttr('textContent'))})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										4,
										84
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Waterway/29.instance"
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/WaterwayIcon"
			},
			"30": {
				"typename": {
					"type": "string",
					"value": "WaterwayIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1085,
						372
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"24": {
								"src": {
									"type": "string",
									"value": "/Formalisms/WN2/icons/waterway.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										7,
										4
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"52": {
								"textContent": {
									"type": "string",
									"value": "w_CP_LA"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00bb00",
										"stroke-dasharray": "",
										"fill": "#00bb00",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({name:getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										57
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"55": {
								"textContent": {
									"type": "string",
									"value": 2.1
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#0000ff",
										"stroke-dasharray": "",
										"fill": "#0000ff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('length')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({length:parseInt(getAttr('textContent'))})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										4,
										84
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Waterway/30.instance"
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/WaterwayIcon"
			},
			"31": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						968.5002417444194,
						258.0003864831165
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-71.94881703124418,-99.84811654073738%",
										"0;13.985198137190196,5.5094122433637045%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;176.84174018852875"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/31.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/ConfluenceIcon/26.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/31.instance": "M1041,254L968.5002417444194,258.0003864831165",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/31.instance--/Formalisms/WN2/WN2.defaultIcons/WaterwayIcon/25.instance": "M968.5002417444194,258.0003864831165L896.0004834888389,262.00077296623294"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"33": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1088.4996299344614,
						333.99999771564484
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;19.413710182165914,13.080568955807244%",
										"0;70.69194082006413,99.1408024770446%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;82.48384749785566"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/33.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/ConfluenceIcon/26.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/33.instance": "M1079,262L1088.4996299344614,333.99999771564484",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/33.instance--/Formalisms/WN2/WN2.defaultIcons/WaterwayIcon/30.instance": "M1088.4996299344614,333.99999771564484L1097.9992598689228,405.9999954312897"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"34": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1084.0003677970567,
						346.5000045128473
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-19.905850286036184,-13.663247381943533%",
										"0;-71.13367074895837,-99.06218083092969%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-97.85302854606658"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/34.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/WaterwayIcon/30.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/34.instance": "M1094,419L1084.0003677970567,346.5000045128473",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/34.instance--/Formalisms/WN2/WN2.defaultIcons/ConfluenceIcon/26.instance": "M1084.0003677970567,346.5000045128473L1074.0007355941134,274.00000902569457"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"35": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1180.999995073248,
						287.9996157133465
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;113.38708075256181,99.81199128135741%",
										"0;-16.98158341478927,-6.129143206862981%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-3.5139428269483086"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/35.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/ConfluenceIcon/26.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/35.instance": "M1067,295L1180.999995073248,287.9996157133465",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/35.instance--/Formalisms/WN2/WN2.defaultIcons/WaterwayIcon/29.instance": "M1180.999995073248,287.9996157133465L1294.9999901464962,280.999231426693"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"36": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1158.5000019802492,
						299.00034456335044
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-113.67615178181609,-99.98448372228074%",
										"0;7.998792935578535,-1.7615376206531692%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-178.99066108434744"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/36.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/WaterwayIcon/29.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/36.instance": "M1272,301L1158.5000019802492,299.00034456335044",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/36.instance--/Formalisms/WN2/WN2.defaultIcons/ConfluenceIcon/26.instance": "M1158.5000019802492,299.00034456335044L1045.0000039604984,297.0006891267009"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"37": {
				"typename": {
					"type": "string",
					"value": "LockIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1148,
						539
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"16": {
								"src": {
									"type": "string",
									"value": "/Formalisms/WN2/icons/lock.png"
								},
								"width": {
									"type": "double",
									"value": 96
								},
								"height": {
									"type": "double",
									"value": 96
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										3,
										13
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"43": {
								"textContent": {
									"type": "string",
									"value": "LA"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00bb00",
										"stroke-dasharray": "",
										"fill": "#00bb00",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({name:getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										31,
										98
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"61": {
								"textContent": {
									"type": "string",
									"value": 60
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#888888",
										"stroke-dasharray": "",
										"fill": "#888888",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('lock_shift_interval')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({lock_shift_interval:parseInt(getAttr('textContent'))})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										138,
										42
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"63": {
								"textContent": {
									"type": "string",
									"value": 20
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#888888",
										"stroke-dasharray": "",
										"fill": "#888888",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('washing_duration')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({washing_duration:parseInt(getAttr('textContent'))})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										137,
										13
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"65": {
								"textContent": {
									"type": "string",
									"value": 7
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#888888",
										"stroke-dasharray": "",
										"fill": "#888888",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('gate_open_close_duration')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({gate_open_close_duration:parseInt(getAttr('textContent'))})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										135,
										66
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"67": {
								"textContent": {
									"type": "string",
									"value": "62500"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#8888ff",
										"stroke-dasharray": "",
										"fill": "#8888ff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('surface_area')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({surface_area:parseInt(getAttr('textContent'))})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										136,
										92
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"75": {
								"textContent": {
									"type": "string",
									"value": "W"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										109,
										12
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"76": {
								"textContent": {
									"type": "string",
									"value": "L"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										110,
										40
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"77": {
								"textContent": {
									"type": "string",
									"value": "G"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										109,
										67
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"78": {
								"textContent": {
									"type": "string",
									"value": "S"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										109,
										95
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Lock/37.instance"
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/LockIcon"
			},
			"39": {
				"typename": {
					"type": "string",
					"value": "LockIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1416,
						272
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"16": {
								"src": {
									"type": "string",
									"value": "/Formalisms/WN2/icons/lock.png"
								},
								"width": {
									"type": "double",
									"value": 96
								},
								"height": {
									"type": "double",
									"value": 96
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										3,
										13
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"43": {
								"textContent": {
									"type": "string",
									"value": "LC"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00bb00",
										"stroke-dasharray": "",
										"fill": "#00bb00",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({name:getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										31,
										98
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"61": {
								"textContent": {
									"type": "string",
									"value": 30
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#888888",
										"stroke-dasharray": "",
										"fill": "#888888",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('lock_shift_interval')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({lock_shift_interval:parseInt(getAttr('textContent'))})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										138,
										42
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"63": {
								"textContent": {
									"type": "string",
									"value": 8
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#888888",
										"stroke-dasharray": "",
										"fill": "#888888",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('washing_duration')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({washing_duration:parseInt(getAttr('textContent'))})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										137,
										13
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"65": {
								"textContent": {
									"type": "string",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#888888",
										"stroke-dasharray": "",
										"fill": "#888888",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('gate_open_close_duration')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({gate_open_close_duration:parseInt(getAttr('textContent'))})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										135,
										66
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"67": {
								"textContent": {
									"type": "string",
									"value": 25650
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#8888ff",
										"stroke-dasharray": "",
										"fill": "#8888ff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('surface_area')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({surface_area:parseInt(getAttr('textContent'))})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										136,
										92
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"75": {
								"textContent": {
									"type": "string",
									"value": "W"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										109,
										12
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"76": {
								"textContent": {
									"type": "string",
									"value": "L"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										110,
										40
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"77": {
								"textContent": {
									"type": "string",
									"value": "G"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										109,
										67
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"78": {
								"textContent": {
									"type": "string",
									"value": "S"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										109,
										95
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Lock/39.instance"
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/LockIcon"
			},
			"40": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1140.499552712977,
						481.4999288407009
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;22.399054573130343,14.141650967336922%",
										"0;86.08576374396716,98.99501860153379%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;81.87017815264117"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/40.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/WaterwayIcon/30.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/40.instance": "M1128,394L1140.499552712977,481.4999288407009",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/40.instance--/Formalisms/WN2/WN2.defaultIcons/LockIcon/37.instance": "M1140.499552712977,481.4999288407009L1152.999105425954,568.9998576814017"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"41": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1139.5004161928525,
						501.5000862113766
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-26.340861507391082,-17.746135429121104%",
										"0;-89.72530024571131,-98.41277700243648%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-100.2219256561781"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/41.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/LockIcon/37.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/41.instance": "M1156,593L1139.5004161928525,501.5000862113766",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/41.instance--/Formalisms/WN2/WN2.defaultIcons/WaterwayIcon/30.instance": "M1139.5004161928525,501.5000862113766L1123.000832385705,410.00017242275317"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"42": {
				"typename": {
					"type": "string",
					"value": "AnchorpointIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						462,
						286
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"4": {
								"src": {
									"type": "string",
									"value": "/Formalisms/WN2/icons/anchorpoint.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										4,
										5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"41": {
								"textContent": {
									"type": "string",
									"value": "K"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00bb00",
										"stroke-dasharray": "",
										"fill": "#00bb00",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({name:getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										7,
										56
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Anchorpoint/42.instance"
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/AnchorpointIcon"
			},
			"43": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						434.499761837872,
						301.4996875722622
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;32.65349481708961,99.98818238727057%",
										"0;-9.49913066646485,1.5373297921765856%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;0.8808597872539183"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/43.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/GeneratorIcon/14.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/43.instance": "M402,301L434.499761837872,301.4996875722622",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/43.instance--/Formalisms/WN2/WN2.defaultIcons/AnchorpointIcon/42.instance": "M434.499761837872,301.4996875722622L466.99952367574394,301.9993751445244"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"44": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						538.9998546608169,
						307.0001280955512
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;28.355898017917298,98.63944776622907%",
										"0;-14.863816681071796,-16.439566428995832%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-9.462129187063539"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/44.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/AnchorpointIcon/42.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/44.instance": "M509,312L538.9998546608169,307.0001280955512",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/44.instance--/Formalisms/WN2/WN2.defaultIcons/WaterwayIcon/17.instance": "M538.9998546608169,307.0001280955512L568.9997093216339,302.0002561911023"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"45": {
				"typename": {
					"type": "string",
					"value": "ConfluenceIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						717,
						197
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/WN2/icons/confluence.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										6,
										6
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"48": {
								"textContent": {
									"type": "string",
									"value": "c1"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00bb00",
										"stroke-dasharray": "",
										"fill": "#00bb00",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({name:getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										62
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Confluence/45.instance"
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/ConfluenceIcon"
			},
			"47": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						664.6475608455629,
						256.9707317331115
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;58.40591107389855,98.08912264268108%",
										"0;-21.77945384085581,-19.455693747308747%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-11.218842281268882"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/47.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/WaterwayIcon/17.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/47.instance": "M604,269L664.6475608455629,256.9707317331115",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/47.instance--/Formalisms/WN2/WN2.defaultIcons/ConfluenceIcon/45.instance": "M664.647080973736,256.9708269143003L724.9990412941924,245.0001901565238"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"48": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						815.9996250620333,
						248.49975661921457
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;53.97887799931732,98.02171076361225%",
										"0;0.6975855428533464,19.79252937284025%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;11.415662012431566"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/48.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/ConfluenceIcon/45.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/48.instance": "M764,238L815.9996250620333,248.49975661921457",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/48.instance--/Formalisms/WN2/WN2.defaultIcons/WaterwayIcon/25.instance": "M815.9996250620333,248.49975661921457L867.9992501240665,258.99951323842913"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"49": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						830.5003559627505,
						224.00016645740132
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-65.42585731831582,-99.57014058339793%",
										"0;3.957180515741072,-9.262132810663745%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-174.68557176540997"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/49.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/WaterwayIcon/25.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/49.instance": "M895,230.00000000000003L830.5003559627505,224.00016645740132",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/49.instance--/Formalisms/WN2/WN2.defaultIcons/ConfluenceIcon/45.instance": "M830.5003559627505,224.00016645740132L766.000711925501,218.0003329148026"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"50": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						655.5,
						191
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-73.81233497643439,-97.2879163699367%",
										"0;-7.271017132288904,-23.13139270334158%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-166.62555953512887"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/50.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/ConfluenceIcon/45.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/50.instance": "M727,208L655.5,191",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/50.instance--/Formalisms/WN2/WN2.defaultIcons/WaterwayIcon/18.instance": "M655.353484797469,190.96516421758L584.0008042938998,174.00019123071743"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"51": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#ff0000",
						"stroke-dasharray": "-",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "PortEntryRequestLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						509,
						431.5
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;19.94602598651585,16.35700270946658%",
										"0;95.8451112351031,98.65317259147068%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;80.58582549451755"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/PortEntryRequest/51.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/AnchorpointIcon/42.instance--/Formalisms/WN2/WN2.defaultIcons/PortEntryRequestLink/51.instance": "M493,335L509,431.5",
						"/Formalisms/WN2/WN2.defaultIcons/PortEntryRequestLink/51.instance--/Formalisms/WN2/WN2.defaultIcons/ControlTowerIcon/3.instance": "M509.0245648829404,431.6481569502345L524.999899082857,527.9993913434818"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/PortEntryRequestLink"
			},
			"52": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#00dd00",
						"stroke-dasharray": "-",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "PortEntryPermissionLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						525,
						425
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-23.920674521329147,-19.801980198019784%",
										"0;-98.20733888057958,-98.01980198019803%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-101.42118627499927"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/PortEntryPermission/52.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/ControlTowerIcon/3.instance--/Formalisms/WN2/WN2.defaultIcons/PortEntryPermissionLink/52.instance": "M545,524L525,425",
						"/Formalisms/WN2/WN2.defaultIcons/PortEntryPermissionLink/52.instance--/Formalisms/WN2/WN2.defaultIcons/AnchorpointIcon/42.instance": "M524.9998817792227,424.9994148071524L505.00011755787875,326.00058191149964"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/PortEntryPermissionLink"
			},
			"53": {
				"typename": {
					"type": "string",
					"value": "ConfluenceIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1275,
						810
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/WN2/icons/confluence.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										6,
										6
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"48": {
								"textContent": {
									"type": "string",
									"value": "c3"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00bb00",
										"stroke-dasharray": "",
										"fill": "#00bb00",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({name:getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										62
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Confluence/53.instance"
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/ConfluenceIcon"
			},
			"54": {
				"typename": {
					"type": "string",
					"value": "CanalIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1261,
						689
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"7": {
								"src": {
									"type": "string",
									"value": "/Formalisms/WN2/icons/canal.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"46": {
								"textContent": {
									"type": "string",
									"value": "c_LA_c3"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00bb00",
										"stroke-dasharray": "",
										"fill": "#00bb00",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({name:getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										58
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"57": {
								"textContent": {
									"type": "string",
									"value": 1
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#0000ff",
										"stroke-dasharray": "",
										"fill": "#0000ff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('length')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({length:parseInt(getAttr('textContent'))})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										4,
										83
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Canal/54.instance"
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/CanalIcon"
			},
			"55": {
				"typename": {
					"type": "string",
					"value": "CanalIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1126,
						733
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"7": {
								"src": {
									"type": "string",
									"value": "/Formalisms/WN2/icons/canal.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"46": {
								"textContent": {
									"type": "string",
									"value": "c_d1_c3"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00bb00",
										"stroke-dasharray": "",
										"fill": "#00bb00",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({name:getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										58
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"57": {
								"textContent": {
									"type": "string",
									"value": 1.4
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#0000ff",
										"stroke-dasharray": "",
										"fill": "#0000ff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('length')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({length:parseInt(getAttr('textContent'))})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										4,
										83
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Canal/55.instance"
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/CanalIcon"
			},
			"56": {
				"typename": {
					"type": "string",
					"value": "CanalIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1397,
						785
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"7": {
								"src": {
									"type": "string",
									"value": "/Formalisms/WN2/icons/canal.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"46": {
								"textContent": {
									"type": "string",
									"value": "c_c3_c5"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00bb00",
										"stroke-dasharray": "",
										"fill": "#00bb00",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({name:getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										58
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"57": {
								"textContent": {
									"type": "string",
									"value": 1.5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#0000ff",
										"stroke-dasharray": "",
										"fill": "#0000ff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('length')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({length:parseInt(getAttr('textContent'))})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										4,
										83
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Canal/56.instance"
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/CanalIcon"
			},
			"58": {
				"typename": {
					"type": "string",
					"value": "CanalIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1875,
						215
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"7": {
								"src": {
									"type": "string",
									"value": "/Formalisms/WN2/icons/canal.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"46": {
								"textContent": {
									"type": "string",
									"value": "c_c5_d4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00bb00",
										"stroke-dasharray": "",
										"fill": "#00bb00",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({name:getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										58
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"57": {
								"textContent": {
									"type": "string",
									"value": 5.7
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#0000ff",
										"stroke-dasharray": "",
										"fill": "#0000ff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('length')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({length:parseInt(getAttr('textContent'))})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										4,
										83
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Canal/58.instance"
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/CanalIcon"
			},
			"60": {
				"typename": {
					"type": "string",
					"value": "DockIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1002,
						698
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"28": {
								"src": {
									"type": "string",
									"value": "/Formalisms/WN2/icons/dock.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"39": {
								"textContent": {
									"type": "string",
									"value": "d1"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00bb00",
										"stroke-dasharray": "",
										"fill": "#00bb00",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({name:getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										61
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Dock/60.instance"
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/DockIcon"
			},
			"62": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1284.4998078566732,
						646.5000049267519
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-9.01336893178518,-31.623069669079463%",
										"0;58.66231189365999,94.86823211541652%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;108.43512582122655"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/62.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/LockIcon/37.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/62.instance": "M1303,591L1284.4998078566732,646.5000049267519",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/62.instance--/Formalisms/WN2/WN2.defaultIcons/CanalIcon/54.instance": "M1284.4998078566732,646.5000049267519L1265.9996157133464,702.0000098535039"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"63": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1287.0001998222224,
						655.0000079928889
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10.546480181986453,32.59936343522336%",
										"0;-61.25992835063346,-94.53719640235913%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-70.9742151104643"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/63.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/CanalIcon/54.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/63.instance": "M1267,713L1287.0001998222224,655.0000079928889",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/63.instance--/Formalisms/WN2/WN2.defaultIcons/LockIcon/37.instance": "M1287.0001998222224,655.0000079928889L1307.0003996444448,597.0000159857777"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"64": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1299.9998296745869,
						763.499996128968
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-2.1795508874531606,-18.855858120919425%",
										"0;64.38558194105974,98.20619437959989%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;100.86867658866213"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/64.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/CanalIcon/54.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/64.instance": "M1312,701L1299.9998296745869,763.499996128968",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/64.instance--/Formalisms/WN2/WN2.defaultIcons/ConfluenceIcon/53.instance": "M1299.9998296745869,763.499996128968L1287.9996593491737,825.9999922579358"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"65": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1299.0001742833965,
						792.5000081062045
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;3.203374643871939,20.056711652238835%",
										"0;-65.50566305901941,-97.96799639524608%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-78.42987558560125"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/65.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/ConfluenceIcon/53.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/65.instance": "M1286,856L1299.0001742833965,792.5000081062045",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/65.instance--/Formalisms/WN2/WN2.defaultIcons/CanalIcon/54.instance": "M1299.0001742833965,792.5000081062045L1312.000348566793,729.000016212409"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"66": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1222.0000140883237,
						803.0001326650482
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-77.81470644927595,-95.95694258114659%",
										"0;-12.404173076837083,-28.147205375996652%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-163.65191886482393"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/66.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/ConfluenceIcon/53.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/66.instance": "M1297,825L1222.0000140883237,803.0001326650482",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/66.instance--/Formalisms/WN2/WN2.defaultIcons/CanalIcon/55.instance": "M1222.0000140883237,803.0001326650482L1147.0000281766474,781.0002653300965"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"67": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1238.4999820738146,
						803.4998661511479
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;79.20560060395383,96.27025935841644%",
										"0;11.872840215306383,27.056185301391512%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;15.697703105496561"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/67.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/CanalIcon/55.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/67.instance": "M1162,782L1238.4999820738146,803.4998661511479",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/67.instance--/Formalisms/WN2/WN2.defaultIcons/ConfluenceIcon/53.instance": "M1238.4999820738146,803.4998661511479L1314.9999641476293,824.9997323022959"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"68": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1355.4999688825565,
						826.4998257423163
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;55.18002788978174,90.18764317740239%",
										"0;-37.51893857542382,-43.19940992774722%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-25.594177407701526"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/68.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/ConfluenceIcon/53.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/68.instance": "M1296,855L1355.4999688825565,826.4998257423163",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/68.instance--/Formalisms/WN2/WN2.defaultIcons/CanalIcon/56.instance": "M1355.4999688825565,826.4998257423163L1414.999937765113,797.9996514846326"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"69": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1374.500035266436,
						827.5001742576837
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-56.2383707983513,-90.4648092527466%",
										"0;37.54665518295826,42.615939352127064%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;154.77592866902347"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/69.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/CanalIcon/56.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/69.instance": "M1435,799L1374.500035266436,827.5001742576837",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/69.instance--/Formalisms/WN2/WN2.defaultIcons/ConfluenceIcon/53.instance": "M1374.500035266436,827.5001742576837L1314.000070532872,856.0003485153674"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"70": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1080.500077361946,
						746.0003326563674
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-54.425043824885506,-99.42063947541368%",
										"0;15.942396603908719,10.748788131683247%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;173.829476917773"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/70.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/CanalIcon/55.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/70.instance": "M1136,740L1080.500077361946,746.0003326563674",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/70.instance--/Formalisms/WN2/WN2.defaultIcons/DockIcon/60.instance": "M1080.500077361946,746.0003326563674L1025.0001547238921,752.0006653127348"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"71": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1097.499886742829,
						744.4996885427797
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;57.56378930488063,99.5608967349463%",
										"0;-15.45640113071488,-9.360974379484214%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-5.371307406667222"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/71.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/DockIcon/60.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/71.instance": "M1039,750L1097.499886742829,744.4996885427797",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/71.instance--/Formalisms/WN2/WN2.defaultIcons/CanalIcon/55.instance": "M1097.499886742829,744.4996885427797L1155.999773485658,738.9993770855594"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"80": {
				"typename": {
					"type": "string",
					"value": "ConfluenceIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1845,
						322
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"10": {
								"src": {
									"type": "string",
									"value": "/Formalisms/WN2/icons/confluence.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										6,
										6
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"48": {
								"textContent": {
									"type": "string",
									"value": "c4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00bb00",
										"stroke-dasharray": "",
										"fill": "#00bb00",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({name:getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										8,
										62
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Confluence/80.instance"
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/ConfluenceIcon"
			},
			"81": {
				"typename": {
					"type": "string",
					"value": "CanalIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1993,
						322
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"7": {
								"src": {
									"type": "string",
									"value": "/Formalisms/WN2/icons/canal.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"46": {
								"textContent": {
									"type": "string",
									"value": "c_c4_d3"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00bb00",
										"stroke-dasharray": "",
										"fill": "#00bb00",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({name:getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										58
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"57": {
								"textContent": {
									"type": "string",
									"value": 1.86
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#0000ff",
										"stroke-dasharray": "",
										"fill": "#0000ff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('length')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({length:parseInt(getAttr('textContent'))})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										4,
										83
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Canal/81.instance"
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/CanalIcon"
			},
			"82": {
				"typename": {
					"type": "string",
					"value": "CanalIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1942,
						444
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"7": {
								"src": {
									"type": "string",
									"value": "/Formalisms/WN2/icons/canal.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"46": {
								"textContent": {
									"type": "string",
									"value": "c_c4_d4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00bb00",
										"stroke-dasharray": "",
										"fill": "#00bb00",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({name:getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										58
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"57": {
								"textContent": {
									"type": "string",
									"value": 1.3
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#0000ff",
										"stroke-dasharray": "",
										"fill": "#0000ff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('length')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({length:parseInt(getAttr('textContent'))})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										4,
										83
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Canal/82.instance"
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/CanalIcon"
			},
			"83": {
				"typename": {
					"type": "string",
					"value": "CanalIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1783,
						475
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"7": {
								"src": {
									"type": "string",
									"value": "/Formalisms/WN2/icons/canal.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"46": {
								"textContent": {
									"type": "string",
									"value": "c_c4_d5"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00bb00",
										"stroke-dasharray": "",
										"fill": "#00bb00",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({name:getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										58
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"57": {
								"textContent": {
									"type": "string",
									"value": 1.68
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#0000ff",
										"stroke-dasharray": "",
										"fill": "#0000ff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('length')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({length:parseInt(getAttr('textContent'))})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										4,
										83
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Canal/83.instance"
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/CanalIcon"
			},
			"84": {
				"typename": {
					"type": "string",
					"value": "CanalIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1686,
						302
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"7": {
								"src": {
									"type": "string",
									"value": "/Formalisms/WN2/icons/canal.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"46": {
								"textContent": {
									"type": "string",
									"value": "c_LC_c4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00bb00",
										"stroke-dasharray": "",
										"fill": "#00bb00",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({name:getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										58
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"57": {
								"textContent": {
									"type": "string",
									"value": 1
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#0000ff",
										"stroke-dasharray": "",
										"fill": "#0000ff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('length')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({length:parseInt(getAttr('textContent'))})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										4,
										83
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Canal/84.instance"
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/CanalIcon"
			},
			"85": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1880.4999622822238,
						299.4998698128369
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-4.091170362733237,-33.8721347056924%",
										"0;40.88708328340613,94.08867355043023%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;109.79899076400858"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/85.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/CanalIcon/58.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/85.instance": "M1894,262L1880.4999622822238,299.4998698128369",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/85.instance--/Formalisms/WN2/WN2.defaultIcons/ConfluenceIcon/80.instance": "M1880.4999622822238,299.4998698128369L1866.9999245644476,336.9997396256738"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"86": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1902.0000392802535,
						299.50013486220485
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;4.697318244301869,36.68702948899484%",
										"0;-39.16856808669462,-93.0272103595159%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-68.47727074182208"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/86.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/ConfluenceIcon/80.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/86.instance": "M1888,335L1902.0000392802535,299.50013486220485",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/86.instance--/Formalisms/WN2/WN2.defaultIcons/CanalIcon/58.instance": "M1902.0000392802535,299.50013486220485L1916.000078560507,264.0002697244097"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"87": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1832.9999896213005,
						424.9996056094184
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-27.463633724113834,-52.08672922256189%",
										"0;64.20827853167458,85.36376654585666%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;121.39044574239611"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/87.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/ConfluenceIcon/80.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/87.instance": "M1869,366L1832.9999896213005,424.9996056094184",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/87.instance--/Formalisms/WN2/WN2.defaultIcons/CanalIcon/83.instance": "M1832.9999896213005,424.9996056094184L1796.999979242601,483.99921121883676"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"88": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1852.0000324019506,
						427.50040232421964
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;23.26206265136375,48.629090715155336%",
										"0;-62.362506747295924,-87.37969750586913%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-60.90291620015432"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/88.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/CanalIcon/83.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/88.instance": "M1820,485L1852.0000324019506,427.50040232421964",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/88.instance--/Formalisms/WN2/WN2.defaultIcons/ConfluenceIcon/80.instance": "M1852.0000324019506,427.50040232421964L1884.0000648039013,370.00080464843927"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"89": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1949.9998802748842,
						336.5000385202545
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;56.912170924246766,99.99615346092608%",
										"0;-10.499576825838062,-0.8770935063737251%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-0.5025440050691486"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/89.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/ConfluenceIcon/80.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/89.instance": "M1893,337L1949.9998802748842,336.5000385202545",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/89.instance--/Formalisms/WN2/WN2.defaultIcons/CanalIcon/81.instance": "M1949.9998802748842,336.5000385202545L2006.9997605497683,336.00007704050904"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"90": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1947.0004625728384,
						360.4998157895777
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-55.19857394505084,-99.67871262226713%",
										"0;14.467687051804432,8.009634821106658%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;175.4058961465127"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/90.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/CanalIcon/81.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/90.instance": "M2003,356L1947.0004625728384,360.4998157895777",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/90.instance--/Formalisms/WN2/WN2.defaultIcons/ConfluenceIcon/80.instance": "M1947.0004625728384,360.4998157895777L1891.0009251456768,364.99963157915545"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"91": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1918.9997388821457,
						416.99971671176183
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;38.52825871858249,52.21527496767951%",
										"0;43.77818921499386,85.28519836436813%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;58.523235219215024"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/91.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/ConfluenceIcon/80.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/91.instance": "M1889,368L1918.9997388821457,416.99971671176183",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/91.instance--/Formalisms/WN2/WN2.defaultIcons/CanalIcon/82.instance": "M1918.9997388821457,416.99971671176183L1948.9994777642914,465.99943342352367"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"92": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1929.0002411281907,
						396.00023921447485
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-48.03533535560882,-59.52269363276989%",
										"0;-48.047491422248186,-80.35576483799662%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-126.52881156590256"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/92.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/CanalIcon/82.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/92.instance": "M1969,450L1929.0002411281907,396.00023921447485",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/92.instance--/Formalisms/WN2/WN2.defaultIcons/ConfluenceIcon/80.instance": "M1929.0002411281907,396.00023921447485L1889.0004822563815,342.0004784289497"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"93": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1797.499848586879,
						331.5000198825311
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;64.0025947002739,98.86442945704809%",
										"0;-0.38642306317370867,15.02746113394947%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;8.642841017409252"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/93.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/CanalIcon/84.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/93.instance": "M1735,322L1797.499848586879,331.5000198825311",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/93.instance--/Formalisms/WN2/WN2.defaultIcons/ConfluenceIcon/80.instance": "M1797.499848586879,331.5000198825311L1859.9996971737578,341.0000397650622"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"94": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1799.0001561414929,
						353.9999804823134
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-62.61760123660474,-98.6827548589978%",
										"0;-0.13174403178680905,-16.17757378097682%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-170.69001855884915"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/94.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/ConfluenceIcon/80.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/94.instance": "M1860,364L1799.0001561414929,353.9999804823134",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/94.instance--/Formalisms/WN2/WN2.defaultIcons/CanalIcon/84.instance": "M1799.0001561414929,353.9999804823134L1738.0003122829858,343.9999609646268"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"95": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1634.0001561414927,
						313.00000325294775
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-63.08418840844115,-97.80363377562252%",
										"0;-3.2196333694899977,-20.843445499338934%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-167.96937692857827"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/95.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/CanalIcon/84.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/95.instance": "M1695,326L1634.0001561414927,313.00000325294775",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/95.instance--/Formalisms/WN2/WN2.defaultIcons/LockIcon/39.instance": "M1634.0001561414927,313.00000325294775L1573.0003122829853,300.0000065058955"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"97": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1632.9998405387055,
						337.5000118747772
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;61.402507385706485,99.01137597080665%",
										"0;-1.4011257223034477,14.026668470009994%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;8.063278430027136"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/97.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/LockIcon/39.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/97.instance": "M1573,329L1632.9998405387055,337.5000118747772",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/97.instance--/Formalisms/WN2/WN2.defaultIcons/CanalIcon/84.instance": "M1632.9998405387055,337.5000118747772L1692.999681077411,346.00002374955443"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"98": {
				"typename": {
					"type": "string",
					"value": "DockIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						2088,
						474
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"28": {
								"src": {
									"type": "string",
									"value": "/Formalisms/WN2/icons/dock.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"39": {
								"textContent": {
									"type": "string",
									"value": "d6"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00bb00",
										"stroke-dasharray": "",
										"fill": "#00bb00",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({name:getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										61
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Dock/98.instance"
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/DockIcon"
			},
			"99": {
				"typename": {
					"type": "string",
					"value": "DockIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1988,
						571
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"28": {
								"src": {
									"type": "string",
									"value": "/Formalisms/WN2/icons/dock.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"39": {
								"textContent": {
									"type": "string",
									"value": "d5"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00bb00",
										"stroke-dasharray": "",
										"fill": "#00bb00",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({name:getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										61
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Dock/99.instance"
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/DockIcon"
			},
			"100": {
				"typename": {
					"type": "string",
					"value": "DockIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1780,
						632
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"28": {
								"src": {
									"type": "string",
									"value": "/Formalisms/WN2/icons/dock.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"39": {
								"textContent": {
									"type": "string",
									"value": "d4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00bb00",
										"stroke-dasharray": "",
										"fill": "#00bb00",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({name:getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										61
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Dock/100.instance"
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/DockIcon"
			},
			"101": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						2072.9998194222676,
						414.00001740508264
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;37.41177329862421,33.78627565941063%",
										"0;74.62138983914156,94.11953876356554%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;70.25328496384861"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/101.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/CanalIcon/81.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/101.instance": "M2045,336L2072.9998194222676,414.00001740508264",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/101.instance--/Formalisms/WN2/WN2.defaultIcons/DockIcon/98.instance": "M2072.9998194222676,414.00001740508264L2100.999638844535,492.0000348101653"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"102": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						2069.000189713187,
						435.9999855914035
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-35.498605416295504,-31.2616235792704%",
										"0;-75.87385205066943,-94.98795129482478%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-108.21696794955851"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/102.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/DockIcon/98.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/102.instance": "M2095,515L2069.000189713187,435.9999855914035",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/102.instance--/Formalisms/WN2/WN2.defaultIcons/CanalIcon/81.instance": "M2069.000189713187,435.9999855914035L2043.000379426374,356.99997118280703"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"103": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1994.9998738252193,
						519.9999432213488
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;11.994839203926631,3.1728075650198884%",
										"0;62.68266246484677,99.94965378707099%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;88.18181003299841"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/103.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/CanalIcon/82.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/103.instance": "M1993,457L1994.9998738252193,519.9999432213488",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/103.instance--/Formalisms/WN2/WN2.defaultIcons/DockIcon/99.instance": "M1994.9998738252193,519.9999432213488L1996.9997476504388,582.9998864426975"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"104": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1994.0001153526323,
						550.500064597474
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-11.99562550608971,-2.918298910058642%",
										"0;-68.20810551152022,-99.95740858721554%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-91.6722995344478"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/104.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/DockIcon/99.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/104.instance": "M1996.0000000000005,619L1994.0001153526323,550.500064597474",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/104.instance--/Formalisms/WN2/WN2.defaultIcons/CanalIcon/82.instance": "M1994.0001153526323,550.500064597474L1992.0002307052641,482.00012919494793"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"105": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1826.4999781059364,
						583.4997974799124
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;7.490858952412054,-4.269659372024959%",
										"0;58.9267634171149,99.90880846475389%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;92.44707850780632"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/105.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/CanalIcon/83.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/105.instance": "M1828.9999999999998,525L1826.4999781059364,583.4997974799124",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/105.instance--/Formalisms/WN2/WN2.defaultIcons/DockIcon/100.instance": "M1826.4999781059364,583.4997974799124L1823.999956211873,641.9995949598249"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"106": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1807.0000320238878,
						586.0001896799507
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-9.999967976110838,0.00005337331506262481%",
										"0;-59.999815657380736,-99.99999999998576%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-89.99996941934309"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/106.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/DockIcon/100.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/106.instance": "M1807,646L1807.0000320238878,586.0001896799507",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/106.instance--/Formalisms/WN2/WN2.defaultIcons/CanalIcon/83.instance": "M1807.0000320238878,586.0001896799507L1807.0000640477756,526.0003793599014"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"155": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#aa8800",
						"stroke-dasharray": "-",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "PortDepartureRequestLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						897.2408086160985,
						542.0787855395879
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-348.25166907180744,-99.9995870249574%",
										"0;2.9210673821936552,-0.28739317662462505%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-179.8353356125112"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/PortDepartureRequest/155.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/DockIcon/60.instance--/Formalisms/WN2/WN2.defaultIcons/PortDepartureRequestLink/155.instance": "M1007,720L1009,575L897,542",
						"/Formalisms/WN2/WN2.defaultIcons/PortDepartureRequestLink/155.instance--/Formalisms/WN2/WN2.defaultIcons/ControlTowerIcon/3.instance": "M897,542L549.0006352713561,540.9998694407833"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/PortDepartureRequestLink"
			},
			"156": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#aa8800",
						"stroke-dasharray": "-",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "PortDepartureRequestLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1415,
						971
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-871.7780850471354,-71.93543134008809%",
										"0;-413.1218725548712,-69.46433414289288%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-136.00119705778295"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/PortDepartureRequest/156.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/DockIcon/100.instance--/Formalisms/WN2/WN2.defaultIcons/PortDepartureRequestLink/156.instance": "M1791,670L1415,971",
						"/Formalisms/WN2/WN2.defaultIcons/PortDepartureRequestLink/156.instance--/Formalisms/WN2/WN2.defaultIcons/ControlTowerIcon/3.instance": "M1415,971L1070,1061L546.0004883185802,555.0007101915253"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/PortDepartureRequestLink"
			},
			"157": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#aa8800",
						"stroke-dasharray": "-",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "PortDepartureRequestLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1166.4871802449725,
						1066.7835532305296
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-634.1288077240653,-75.08032674584793%",
										"0;-509.7796356666828,-66.05258916754676%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-138.66000738032852"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/PortDepartureRequest/157.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/DockIcon/99.instance--/Formalisms/WN2/WN2.defaultIcons/PortDepartureRequestLink/157.instance": "M2031,623L1796,935L1561,1066L1166,1066",
						"/Formalisms/WN2/WN2.defaultIcons/PortDepartureRequestLink/157.instance--/Formalisms/WN2/WN2.defaultIcons/ControlTowerIcon/3.instance": "M1166,1066L1034,993L535.0004760876092,554.0007044940129"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/PortDepartureRequestLink"
			},
			"158": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#aa8800",
						"stroke-dasharray": "-",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "PortDepartureRequestLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1485.1934434947407,
						1105.5140672851257
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-960.0105445208787,-70.98109551379102%",
										"0;-544.6741192658657,-70.43922259410645%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-135.21953620107624"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/PortDepartureRequest/158.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/DockIcon/98.instance--/Formalisms/WN2/WN2.defaultIcons/PortDepartureRequestLink/158.instance": "M2138,508L2076,668L2002,807L1876,1031L1485,1105",
						"/Formalisms/WN2/WN2.defaultIcons/PortDepartureRequestLink/158.instance--/Formalisms/WN2/WN2.defaultIcons/ControlTowerIcon/3.instance": "M1485,1105L1052,1078L528.0004678776263,558.0007041987084"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/PortDepartureRequestLink"
			},
			"160": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1381.9996844321329,
						299.00000000000006
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;82.3652948957706,99.93314214457517%",
										"0;-6.9933142144574845,3.656104636376503%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;2.0952606208141833"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/160.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/WaterwayIcon/29.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/160.instance": "M1300,296L1381.9996844321329,299.00000000000006",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/160.instance--/Formalisms/WN2/WN2.defaultIcons/LockIcon/39.instance": "M1381.9996844321329,299.00000000000006L1463.9993688642658,302.0000000000001"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"161": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1363.5003425959183,
						322.5000176192187
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-75.50130814645877,-99.49708326895599%",
										"0;2.449725946114256,-10.016507423769935%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-174.2513237383674"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/161.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/LockIcon/39.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/161.instance": "M1438,330L1363.5003425959183,322.5000176192187",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/161.instance--/Formalisms/WN2/WN2.defaultIcons/WaterwayIcon/29.instance": "M1363.5003425959183,322.5000176192187L1289.0006851918365,315.00003523843736"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"162": {
				"typename": {
					"type": "string",
					"value": "DockIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1999,
						175
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"28": {
								"src": {
									"type": "string",
									"value": "/Formalisms/WN2/icons/dock.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"39": {
								"textContent": {
									"type": "string",
									"value": "d7"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00bb00",
										"stroke-dasharray": "",
										"fill": "#00bb00",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({name:getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										61
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Dock/162.instance"
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/DockIcon"
			},
			"163": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1952.4997381495252,
						211.50003460578964
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;56.41015233436792,97.79244915692296%",
										"0;-22.279210309902652,-20.895858151572497%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-12.061329450089136"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/163.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/CanalIcon/58.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/163.instance": "M1894,224L1952.4997381495252,211.50003460578964",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/163.instance--/Formalisms/WN2/WN2.defaultIcons/DockIcon/162.instance": "M1952.4997381495252,211.50003460578964L2010.9994762990505,199.00006921157927"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"164": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1966.5002953411945,
						228.4999495396954
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-41.40158909917932,-95.07979805363605%",
										"0;24.00792934505901,30.981155596261818%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;161.95212565108014"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/164.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/DockIcon/162.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/164.instance": "M2011,214L1966.5002953411945,228.4999495396954",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/164.instance--/Formalisms/WN2/WN2.defaultIcons/CanalIcon/58.instance": "M1966.5002953411945,228.4999495396954L1922.000590682389,242.9998990793908"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"165": {
				"typename": {
					"type": "string",
					"value": "DockIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1534,
						735
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"28": {
								"src": {
									"type": "string",
									"value": "/Formalisms/WN2/icons/dock.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"39": {
								"textContent": {
									"type": "string",
									"value": "d3"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00bb00",
										"stroke-dasharray": "",
										"fill": "#00bb00",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({name:getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										61
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Dock/165.instance"
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/DockIcon"
			},
			"166": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1491.9998696408318,
						782.5000090684639
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;44.91837235231901,86.12687461346603%",
										"0;-38.1126783928828,-50.814972885128064%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-30.540662518265716"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/166.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/CanalIcon/56.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/166.instance": "M1442,812L1491.9998696408318,782.5000090684639",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/166.instance--/Formalisms/WN2/WN2.defaultIcons/DockIcon/165.instance": "M1491.9998696408318,782.5000090684639L1541.9997392816636,753.0000181369277"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"167": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1487.5004221384645,
						795.9999791903574
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-59.345345513150505,-90.96282405226438%",
										"0;38.09626159558377,41.54232348384948%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;155.45402757752245"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/167.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/DockIcon/165.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/167.instance": "M1551,767L1487.5004221384645,795.9999791903574",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/167.instance--/Formalisms/WN2/WN2.defaultIcons/CanalIcon/56.instance": "M1487.5004221384645,795.9999791903574L1424.000844276929,824.9999583807147"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"168": {
				"typename": {
					"type": "string",
					"value": "CanalIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1196,
						882
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"7": {
								"src": {
									"type": "string",
									"value": "/Formalisms/WN2/icons/canal.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"46": {
								"textContent": {
									"type": "string",
									"value": "c_c3"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00bb00",
										"stroke-dasharray": "",
										"fill": "#00bb00",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({name:getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										58
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"57": {
								"textContent": {
									"type": "string",
									"value": 1.3
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#0000ff",
										"stroke-dasharray": "",
										"fill": "#0000ff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('length')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({length:parseInt(getAttr('textContent'))})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										4,
										83
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Canal/168.instance"
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/CanalIcon"
			},
			"169": {
				"typename": {
					"type": "string",
					"value": "DockIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1022,
						888
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"28": {
								"src": {
									"type": "string",
									"value": "/Formalisms/WN2/icons/dock.png"
								},
								"width": {
									"type": "double",
									"value": 48
								},
								"height": {
									"type": "double",
									"value": 48
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#ffffff",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Image",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										8
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"39": {
								"textContent": {
									"type": "string",
									"value": "d2"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00bb00",
										"stroke-dasharray": "",
										"fill": "#00bb00",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 1,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({textContent:getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */\n({name:getAttr('textContent')})"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										61
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Dock/169.instance"
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/DockIcon"
			},
			"170": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1252.5000515195313,
						877.4998196816407
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-29.774220680752705,-88.1291647316547%",
										"0;27.31273615480609,47.25727799716009%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;151.79856873258996"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/170.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/ConfluenceIcon/53.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/170.instance": "M1287,859L1252.5000515195313,877.4998196816407",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/170.instance--/Formalisms/WN2/WN2.defaultIcons/CanalIcon/168.instance": "M1252.5000515195313,877.4998196816407L1218.0001030390627,895.9996393632813"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"171": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1277.4999848590264,
						870.5001375305109
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;21.89966012333889,64.98850968601755%",
										"0;-40.99871343809093,-76.0032473568755%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-49.467060770267125"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/171.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/CanalIcon/168.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/171.instance": "M1248,905L1277.4999848590264,870.5001375305109",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/171.instance--/Formalisms/WN2/WN2.defaultIcons/ConfluenceIcon/53.instance": "M1277.4999848590264,870.5001375305109L1306.9999697180529,836.0002750610217"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"172": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1128.5002433807854,
						913.4996250620331
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-88.24061707426972,-99.72518527740888%",
										"0;3.4721435897740776,-7.408604550552749%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-175.7512895308981"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/172.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/CanalIcon/168.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/172.instance": "M1216,920L1128.5002433807854,913.4996250620331",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/172.instance--/Formalisms/WN2/WN2.defaultIcons/DockIcon/169.instance": "M1128.5002433807854,913.4996250620331L1041.000486761571,906.9992501240663"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"173": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#0000ff",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "VesselLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1157.9998190891095,
						916.5003618217814
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;83.58355570913841,99.9133248363275%",
										"0;-13.490970661851293,-4.162633799711336%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-2.385702794256851"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/Vessel/173.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/DockIcon/169.instance--/Formalisms/WN2/WN2.defaultIcons/VesselLink/173.instance": "M1074,920L1157.9998190891095,916.5003618217814",
						"/Formalisms/WN2/WN2.defaultIcons/VesselLink/173.instance--/Formalisms/WN2/WN2.defaultIcons/CanalIcon/168.instance": "M1157.9998190891095,916.5003618217814L1241.999638178219,913.0007236435629"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/VesselLink"
			},
			"174": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#aa8800",
						"stroke-dasharray": "-",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "PortDepartureRequestLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						792.5003369447693,
						728.0002736734713
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-263.8427564838313,-81.0474906491909%",
										"0;-185.75782670056105,-58.577335715012765%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-144.1423570455856"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/PortDepartureRequest/174.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/DockIcon/169.instance--/Formalisms/WN2/WN2.defaultIcons/PortDepartureRequestLink/174.instance": "M1054,917L792.5003369447693,728.0002736734713",
						"/Formalisms/WN2/WN2.defaultIcons/PortDepartureRequestLink/174.instance--/Formalisms/WN2/WN2.defaultIcons/ControlTowerIcon/3.instance": "M792.5003369447693,728.0002736734713L531.0006738895385,539.0005473469425"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/PortDepartureRequestLink"
			},
			"175": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#aa8800",
						"stroke-dasharray": "-",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "PortDepartureRequestLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1043.5004721535042,
						653.0001264381107
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-519.3151938610289,-97.8988283661231%",
										"0;-104.08392042724438,-20.391650363331856%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;-168.2339204425205"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/PortDepartureRequest/175.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/DockIcon/165.instance--/Formalisms/WN2/WN2.defaultIcons/PortDepartureRequestLink/175.instance": "M1562,761L1043.5004721535042,653.0001264381107",
						"/Formalisms/WN2/WN2.defaultIcons/PortDepartureRequestLink/175.instance--/Formalisms/WN2/WN2.defaultIcons/ControlTowerIcon/3.instance": "M1043.5004721535042,653.0001264381107L525.0009443070086,545.0002528762213"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/PortDepartureRequestLink"
			},
			"176": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#aa8800",
						"stroke-dasharray": "-",
						"stroke-opacity": 1,
						"stroke-width": 4
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "PortDepartureRequestLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						1149.0003807701569,
						157.49992121287403
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 1,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-623.9080927100924,-85.24053032881478%",
										"0;386.90954242602663,52.28816299376376%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;148.47425520840557"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/WN2/WN2/PortDepartureRequest/176.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/WN2/WN2.defaultIcons/DockIcon/162.instance--/Formalisms/WN2/WN2.defaultIcons/PortDepartureRequestLink/176.instance": "M2023,194L1149,157",
						"/Formalisms/WN2/WN2.defaultIcons/PortDepartureRequestLink/176.instance--/Formalisms/WN2/WN2.defaultIcons/ControlTowerIcon/3.instance": "M1149,157L523.000761540314,540.999842425748"
					}
				},
				"$type": "/Formalisms/WN2/WN2.defaultIcons/PortDepartureRequestLink"
			}
		},
		"edges": [],
		"metamodels": [
			"/Formalisms/WN2/WN2.defaultIcons"
		]
	},
	"asm": {
		"nodes": {
			"3": {
				"name": {
					"type": "string",
					"value": "T"
				},
				"$type": "/Formalisms/WN2/WN2/ControlTower"
			},
			"4": {
				"name": {
					"type": "string",
					"value": "S"
				},
				"$type": "/Formalisms/WN2/WN2/Sea"
			},
			"14": {
				"name": {
					"type": "string",
					"value": "gen"
				},
				"$type": "/Formalisms/WN2/WN2/Generator"
			},
			"17": {
				"length": {
					"type": "number",
					"value": 15
				},
				"name": {
					"type": "string",
					"value": "w_K_c1"
				},
				"$type": "/Formalisms/WN2/WN2/Waterway"
			},
			"18": {
				"length": {
					"type": "number",
					"value": 15
				},
				"name": {
					"type": "string",
					"value": "w_c1_S"
				},
				"$type": "/Formalisms/WN2/WN2/Waterway"
			},
			"20": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"25": {
				"length": {
					"type": "number",
					"value": 90
				},
				"name": {
					"type": "string",
					"value": "w_c1_CP"
				},
				"$type": "/Formalisms/WN2/WN2/Waterway"
			},
			"26": {
				"name": {
					"type": "string",
					"value": "CP"
				},
				"$type": "/Formalisms/WN2/WN2/Confluence"
			},
			"28": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"29": {
				"length": {
					"type": "number",
					"value": 6
				},
				"name": {
					"type": "string",
					"value": "w_CP_c2"
				},
				"$type": "/Formalisms/WN2/WN2/Waterway"
			},
			"30": {
				"length": {
					"type": "number",
					"value": 2.1
				},
				"name": {
					"type": "string",
					"value": "w_CP_LA"
				},
				"$type": "/Formalisms/WN2/WN2/Waterway"
			},
			"31": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"33": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"34": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"35": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"36": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"37": {
				"washing_duration": {
					"type": "number",
					"value": 20
				},
				"lock_shift_interval": {
					"type": "number",
					"value": 60
				},
				"gate_open_close_duration": {
					"type": "number",
					"value": 7
				},
				"surface_area": {
					"type": "number",
					"value": "62500"
				},
				"name": {
					"type": "string",
					"value": "LA"
				},
				"$type": "/Formalisms/WN2/WN2/Lock"
			},
			"39": {
				"washing_duration": {
					"type": "number",
					"value": 8
				},
				"lock_shift_interval": {
					"type": "number",
					"value": 30
				},
				"gate_open_close_duration": {
					"type": "number",
					"value": 5
				},
				"surface_area": {
					"type": "number",
					"value": 25650
				},
				"name": {
					"type": "string",
					"value": "LC"
				},
				"$type": "/Formalisms/WN2/WN2/Lock"
			},
			"40": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"41": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"42": {
				"name": {
					"type": "string",
					"value": "K"
				},
				"$type": "/Formalisms/WN2/WN2/Anchorpoint"
			},
			"43": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"44": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"45": {
				"name": {
					"type": "string",
					"value": "c1"
				},
				"$type": "/Formalisms/WN2/WN2/Confluence"
			},
			"47": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"48": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"49": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"50": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"51": {
				"$type": "/Formalisms/WN2/WN2/PortEntryRequest"
			},
			"52": {
				"$type": "/Formalisms/WN2/WN2/PortEntryPermission"
			},
			"53": {
				"name": {
					"type": "string",
					"value": "c3"
				},
				"$type": "/Formalisms/WN2/WN2/Confluence"
			},
			"54": {
				"length": {
					"type": "number",
					"value": 1
				},
				"name": {
					"type": "string",
					"value": "c_LA_c3"
				},
				"$type": "/Formalisms/WN2/WN2/Canal"
			},
			"55": {
				"length": {
					"type": "number",
					"value": 1.4
				},
				"name": {
					"type": "string",
					"value": "c_d1_c3"
				},
				"$type": "/Formalisms/WN2/WN2/Canal"
			},
			"56": {
				"length": {
					"type": "number",
					"value": 1.5
				},
				"name": {
					"type": "string",
					"value": "c_c3_c5"
				},
				"$type": "/Formalisms/WN2/WN2/Canal"
			},
			"58": {
				"length": {
					"type": "number",
					"value": 5.7
				},
				"name": {
					"type": "string",
					"value": "c_c5_d4"
				},
				"$type": "/Formalisms/WN2/WN2/Canal"
			},
			"60": {
				"name": {
					"type": "string",
					"value": "d1"
				},
				"$type": "/Formalisms/WN2/WN2/Dock"
			},
			"62": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"63": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"64": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"65": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"66": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"67": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"68": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"69": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"70": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"71": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"80": {
				"name": {
					"type": "string",
					"value": "c4"
				},
				"$type": "/Formalisms/WN2/WN2/Confluence"
			},
			"81": {
				"length": {
					"type": "number",
					"value": 1.86
				},
				"name": {
					"type": "string",
					"value": "c_c4_d3"
				},
				"$type": "/Formalisms/WN2/WN2/Canal"
			},
			"82": {
				"length": {
					"type": "number",
					"value": 1.3
				},
				"name": {
					"type": "string",
					"value": "c_c4_d4"
				},
				"$type": "/Formalisms/WN2/WN2/Canal"
			},
			"83": {
				"length": {
					"type": "number",
					"value": 1.68
				},
				"name": {
					"type": "string",
					"value": "c_c4_d5"
				},
				"$type": "/Formalisms/WN2/WN2/Canal"
			},
			"84": {
				"length": {
					"type": "number",
					"value": 1
				},
				"name": {
					"type": "string",
					"value": "c_LC_c4"
				},
				"$type": "/Formalisms/WN2/WN2/Canal"
			},
			"85": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"86": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"87": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"88": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"89": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"90": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"91": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"92": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"93": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"94": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"95": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"97": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"98": {
				"name": {
					"type": "string",
					"value": "d6"
				},
				"$type": "/Formalisms/WN2/WN2/Dock"
			},
			"99": {
				"name": {
					"type": "string",
					"value": "d5"
				},
				"$type": "/Formalisms/WN2/WN2/Dock"
			},
			"100": {
				"name": {
					"type": "string",
					"value": "d4"
				},
				"$type": "/Formalisms/WN2/WN2/Dock"
			},
			"101": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"102": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"103": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"104": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"105": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"106": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"155": {
				"$type": "/Formalisms/WN2/WN2/PortDepartureRequest"
			},
			"156": {
				"$type": "/Formalisms/WN2/WN2/PortDepartureRequest"
			},
			"157": {
				"$type": "/Formalisms/WN2/WN2/PortDepartureRequest"
			},
			"158": {
				"$type": "/Formalisms/WN2/WN2/PortDepartureRequest"
			},
			"160": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"161": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"162": {
				"name": {
					"type": "string",
					"value": "d7"
				},
				"$type": "/Formalisms/WN2/WN2/Dock"
			},
			"163": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"164": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"165": {
				"name": {
					"type": "string",
					"value": "d3"
				},
				"$type": "/Formalisms/WN2/WN2/Dock"
			},
			"166": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"167": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"168": {
				"length": {
					"type": "number",
					"value": 1.3
				},
				"name": {
					"type": "string",
					"value": "c_c3"
				},
				"$type": "/Formalisms/WN2/WN2/Canal"
			},
			"169": {
				"name": {
					"type": "string",
					"value": "d2"
				},
				"$type": "/Formalisms/WN2/WN2/Dock"
			},
			"170": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"171": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"172": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"173": {
				"$type": "/Formalisms/WN2/WN2/Vessel"
			},
			"174": {
				"$type": "/Formalisms/WN2/WN2/PortDepartureRequest"
			},
			"175": {
				"$type": "/Formalisms/WN2/WN2/PortDepartureRequest"
			},
			"176": {
				"$type": "/Formalisms/WN2/WN2/PortDepartureRequest"
			}
		},
		"edges": [
			{
				"src": "18",
				"dest": "20"
			},
			{
				"src": "20",
				"dest": "4"
			},
			{
				"src": "25",
				"dest": "28"
			},
			{
				"src": "28",
				"dest": "26"
			},
			{
				"src": "26",
				"dest": "31"
			},
			{
				"src": "31",
				"dest": "25"
			},
			{
				"src": "26",
				"dest": "33"
			},
			{
				"src": "33",
				"dest": "30"
			},
			{
				"src": "30",
				"dest": "34"
			},
			{
				"src": "34",
				"dest": "26"
			},
			{
				"src": "26",
				"dest": "35"
			},
			{
				"src": "35",
				"dest": "29"
			},
			{
				"src": "29",
				"dest": "36"
			},
			{
				"src": "36",
				"dest": "26"
			},
			{
				"src": "30",
				"dest": "40"
			},
			{
				"src": "40",
				"dest": "37"
			},
			{
				"src": "37",
				"dest": "41"
			},
			{
				"src": "41",
				"dest": "30"
			},
			{
				"src": "14",
				"dest": "43"
			},
			{
				"src": "43",
				"dest": "42"
			},
			{
				"src": "42",
				"dest": "44"
			},
			{
				"src": "44",
				"dest": "17"
			},
			{
				"src": "17",
				"dest": "47"
			},
			{
				"src": "47",
				"dest": "45"
			},
			{
				"src": "45",
				"dest": "48"
			},
			{
				"src": "48",
				"dest": "25"
			},
			{
				"src": "25",
				"dest": "49"
			},
			{
				"src": "49",
				"dest": "45"
			},
			{
				"src": "45",
				"dest": "50"
			},
			{
				"src": "50",
				"dest": "18"
			},
			{
				"src": "42",
				"dest": "51"
			},
			{
				"src": "51",
				"dest": "3"
			},
			{
				"src": "3",
				"dest": "52"
			},
			{
				"src": "52",
				"dest": "42"
			},
			{
				"src": "37",
				"dest": "62"
			},
			{
				"src": "62",
				"dest": "54"
			},
			{
				"src": "54",
				"dest": "63"
			},
			{
				"src": "63",
				"dest": "37"
			},
			{
				"src": "54",
				"dest": "64"
			},
			{
				"src": "64",
				"dest": "53"
			},
			{
				"src": "53",
				"dest": "65"
			},
			{
				"src": "65",
				"dest": "54"
			},
			{
				"src": "53",
				"dest": "66"
			},
			{
				"src": "66",
				"dest": "55"
			},
			{
				"src": "55",
				"dest": "67"
			},
			{
				"src": "67",
				"dest": "53"
			},
			{
				"src": "53",
				"dest": "68"
			},
			{
				"src": "68",
				"dest": "56"
			},
			{
				"src": "56",
				"dest": "69"
			},
			{
				"src": "69",
				"dest": "53"
			},
			{
				"src": "55",
				"dest": "70"
			},
			{
				"src": "70",
				"dest": "60"
			},
			{
				"src": "60",
				"dest": "71"
			},
			{
				"src": "71",
				"dest": "55"
			},
			{
				"src": "58",
				"dest": "85"
			},
			{
				"src": "85",
				"dest": "80"
			},
			{
				"src": "80",
				"dest": "86"
			},
			{
				"src": "86",
				"dest": "58"
			},
			{
				"src": "80",
				"dest": "87"
			},
			{
				"src": "87",
				"dest": "83"
			},
			{
				"src": "83",
				"dest": "88"
			},
			{
				"src": "88",
				"dest": "80"
			},
			{
				"src": "80",
				"dest": "89"
			},
			{
				"src": "89",
				"dest": "81"
			},
			{
				"src": "81",
				"dest": "90"
			},
			{
				"src": "90",
				"dest": "80"
			},
			{
				"src": "80",
				"dest": "91"
			},
			{
				"src": "91",
				"dest": "82"
			},
			{
				"src": "82",
				"dest": "92"
			},
			{
				"src": "92",
				"dest": "80"
			},
			{
				"src": "84",
				"dest": "93"
			},
			{
				"src": "93",
				"dest": "80"
			},
			{
				"src": "80",
				"dest": "94"
			},
			{
				"src": "94",
				"dest": "84"
			},
			{
				"src": "84",
				"dest": "95"
			},
			{
				"src": "95",
				"dest": "39"
			},
			{
				"src": "39",
				"dest": "97"
			},
			{
				"src": "97",
				"dest": "84"
			},
			{
				"src": "81",
				"dest": "101"
			},
			{
				"src": "101",
				"dest": "98"
			},
			{
				"src": "98",
				"dest": "102"
			},
			{
				"src": "102",
				"dest": "81"
			},
			{
				"src": "82",
				"dest": "103"
			},
			{
				"src": "103",
				"dest": "99"
			},
			{
				"src": "99",
				"dest": "104"
			},
			{
				"src": "104",
				"dest": "82"
			},
			{
				"src": "83",
				"dest": "105"
			},
			{
				"src": "105",
				"dest": "100"
			},
			{
				"src": "100",
				"dest": "106"
			},
			{
				"src": "106",
				"dest": "83"
			},
			{
				"src": "60",
				"dest": "155"
			},
			{
				"src": "155",
				"dest": "3"
			},
			{
				"src": "100",
				"dest": "156"
			},
			{
				"src": "156",
				"dest": "3"
			},
			{
				"src": "99",
				"dest": "157"
			},
			{
				"src": "157",
				"dest": "3"
			},
			{
				"src": "98",
				"dest": "158"
			},
			{
				"src": "158",
				"dest": "3"
			},
			{
				"src": "29",
				"dest": "160"
			},
			{
				"src": "160",
				"dest": "39"
			},
			{
				"src": "39",
				"dest": "161"
			},
			{
				"src": "161",
				"dest": "29"
			},
			{
				"src": "58",
				"dest": "163"
			},
			{
				"src": "163",
				"dest": "162"
			},
			{
				"src": "162",
				"dest": "164"
			},
			{
				"src": "164",
				"dest": "58"
			},
			{
				"src": "56",
				"dest": "166"
			},
			{
				"src": "166",
				"dest": "165"
			},
			{
				"src": "165",
				"dest": "167"
			},
			{
				"src": "167",
				"dest": "56"
			},
			{
				"src": "53",
				"dest": "170"
			},
			{
				"src": "170",
				"dest": "168"
			},
			{
				"src": "168",
				"dest": "171"
			},
			{
				"src": "171",
				"dest": "53"
			},
			{
				"src": "168",
				"dest": "172"
			},
			{
				"src": "172",
				"dest": "169"
			},
			{
				"src": "169",
				"dest": "173"
			},
			{
				"src": "173",
				"dest": "168"
			},
			{
				"src": "169",
				"dest": "174"
			},
			{
				"src": "174",
				"dest": "3"
			},
			{
				"src": "165",
				"dest": "175"
			},
			{
				"src": "175",
				"dest": "3"
			},
			{
				"src": "162",
				"dest": "176"
			},
			{
				"src": "176",
				"dest": "3"
			}
		],
		"metamodels": [
			"/Formalisms/WN2/WN2"
		]
	}
}