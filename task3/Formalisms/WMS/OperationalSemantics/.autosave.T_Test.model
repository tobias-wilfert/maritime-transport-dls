{
	"csm": {
		"nodes": {
			"0": {
				"typename": {
					"type": "string",
					"value": "StartIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						438,
						268
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"21": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"stroke-dasharray": "",
										"fill": "#000000",
										"fill-opacity": 0.75,
										"font-size": "20px",
										"stroke-width": 0,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										3,
										2
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/Start/0.instance"
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/StartIcon"
			},
			"1": {
				"typename": {
					"type": "string",
					"value": "EndFailIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						525,
						501
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"451": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#800000",
										"stroke-dasharray": "",
										"fill": "white",
										"fill-opacity": 1,
										"font-size": "20px",
										"stroke-width": 2,
										"arrow-start": "none",
										"arrow-end": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"455": {
								"segments": {
									"type": "string",
									"value": "M 12.49983,1.5069319 1.50001,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#800000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										4
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"456": {
								"segments": {
									"type": "string",
									"value": "M 1.5,1.5069319 12.49983,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#800000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										5,
										4
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"457": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										7.363811097006419,
										5.348023328271552
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"458": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										7.3638135362075445,
										5.348023328271552
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "451",
								"dest": "457"
							},
							{
								"src": "457",
								"dest": "455"
							},
							{
								"src": "451",
								"dest": "458"
							},
							{
								"src": "458",
								"dest": "456"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/EndFail/1.instance"
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/EndFailIcon"
			},
			"2": {
				"typename": {
					"type": "string",
					"value": "ARuleIcon"
				},
				"position": {
					"type": "list<double>",
					"value": [
						358,
						327
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"parser": {
					"type": "code",
					"value": "({position:getAttr(\"position\")})"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"402": {
								"width": {
									"type": "double",
									"value": 200
								},
								"height": {
									"type": "double",
									"value": 50
								},
								"cornerRadius": {
									"type": "double",
									"value": 1
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff",
										"stroke": "#008000",
										"stroke-width": "5",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"fill-opacity": "0.5"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Rectangle",
								"position": {
									"type": "list<double>",
									"value": [
										2,
										25
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"403": {
								"textContent": {
									"type": "string",
									"value": "Update_Sources"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('name')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										49,
										39
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"404": {
								"segments": {
									"type": "string",
									"value": "M 0.01697481,7.2449841 2.4082848,10.044684 11.016975,1.5335841"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										48,
										78
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"405": {
								"textContent": {
									"type": "string",
									"value": ":"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"text-align": "left",
										"line-height": "125%",
										"writing-mode": "lr-tb",
										"text-anchor": "left",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										42,
										39
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"406": {
								"segments": {
									"type": "string",
									"value": "M 12.49983,1.5069319 1.50001,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										145,
										78
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"407": {
								"textContent": {
									"type": "string",
									"value": ""
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"font-size": "20px",
										"font-style": "normal",
										"font-variant": "normal",
										"font-weight": "bold",
										"font-stretch": "normal",
										"line-height": "125%",
										"text-anchor": "end",
										"fill": "#008000",
										"fill-opacity": "1",
										"stroke": "none",
										"font-family": "Arial"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */\n({'textContent': getAttr('alias')})"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Text",
								"position": {
									"type": "list<double>",
									"value": [
										41,
										39
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"408": {
								"segments": {
									"type": "string",
									"value": "M 1.5,1.5069319 12.49983,12.506752"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "none",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "round",
										"stroke-linejoin": "round",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1",
										"stroke-dasharray": "none"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										145,
										78
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"410": {
								"segments": {
									"type": "string",
									"value": "M 1,10.3685 7.03183,20.737 13.06367,10.3685 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"fill": "#ffffff",
										"fill-opacity": "0.5",
										"stroke": "#008000",
										"stroke-width": "3",
										"stroke-linecap": "butt",
										"stroke-linejoin": "miter",
										"stroke-miterlimit": "4",
										"stroke-opacity": "1"
									}
								},
								"mapper": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										96,
										1
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								}
							},
							"411": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										38.25,
										38.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"412": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										16.25,
										38.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							},
							"413": {
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Contain",
								"position": {
									"type": "list<double>",
									"value": [
										24,
										38.5
									]
								},
								"orientation": {
									"type": "double",
									"value": 0
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"link-style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#00ffff",
										"stroke-dasharray": "",
										"stroke-opacity": 0.1,
										"stroke-width": 1
									}
								}
							}
						},
						"edges": [
							{
								"src": "402",
								"dest": "411"
							},
							{
								"src": "411",
								"dest": "403"
							},
							{
								"src": "402",
								"dest": "412"
							},
							{
								"src": "412",
								"dest": "407"
							},
							{
								"src": "402",
								"dest": "413"
							},
							{
								"src": "413",
								"dest": "405"
							}
						]
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/ARule/2.instance"
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/ARuleIcon"
			},
			"3": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#000000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "initialLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						454,
						313
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;9.939058693962409,17.378533390904852%",
										"0;33.30443059694403,98.47835588179366%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;79.99202019855862"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"268": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;15.847760046870007,17.378533390904852%",
										"0;32.261718593489775,98.47835588179366%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;79.99202019855862"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"269": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;15.847760046870007,17.378533390904852%",
										"0;32.261718593489775,98.47835588179366%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;79.99202019855862"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"270": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;15.847760046870007,17.378533390904852%",
										"0;32.261718593489775,98.47835588179366%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;79.99202019855862"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"271": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10.923842252780332,17.378533390904852%",
										"0;33.13064526303498,98.47835588179366%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;79.99202019855862"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"272": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10.923842252780332,17.378533390904852%",
										"0;33.13064526303498,98.47835588179366%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;79.99202019855862"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;15.847760046870007,17.378533390904852%",
										"0;32.261718593489775,98.47835588179366%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;79.99202019855862"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;9.939058693962409,17.378533390904852%",
										"0;33.30443059694403,98.47835588179366%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;79.99202019855862"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"275": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8 l6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;13.87819292923416,17.378533390904852%",
										"0;32.60928926130782,98.47835588179366%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;79.99202019855862"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"276": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;15.847760046870007,17.378533390904852%",
										"0;32.261718593489775,98.47835588179366%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;79.99202019855862"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"277": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10.923842252780332,17.378533390904852%",
										"0;33.13064526303498,98.47835588179366%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;79.99202019855862"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"278": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;13.87819292923416,17.378533390904852%",
										"0;32.60928926130782,98.47835588179366%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;79.99202019855862"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"279": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10.923842252780332,17.378533390904852%",
										"0;33.13064526303498,98.47835588179366%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;79.99202019855862"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"280": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;15.847760046870007,17.378533390904852%",
										"0;32.261718593489775,98.47835588179366%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;79.99202019855862"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;9.939058693962409,17.378533390904852%",
										"0;33.30443059694403,98.47835588179366%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;79.99202019855862"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"282": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,5 l-10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;10.923842252780332,17.378533390904852%",
										"0;33.13064526303498,98.47835588179366%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;79.99202019855862"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"283": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-1.0760822059103248,0%",
										"0;-34.86892666954526,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;79.99202019855866"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"284": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,5 l10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-1.0760822059103248,0%",
										"0;-34.86892666954526,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;79.99202019855866"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"285": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-1.0760822059103248,0%",
										"0;-34.86892666954526,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;79.99202019855866"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"286": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;3.8478355881793505,0%",
										"0;-35.737853339090464,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;79.99202019855866"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"287": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;1.878268470543503,0%",
										"0;-35.39028267127236,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;79.99202019855866"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"288": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-2.0608657647282485,0%",
										"0;-34.69514133563621,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;79.99202019855866"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"289": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;3.8478355881793505,0%",
										"0;-35.737853339090464,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;79.99202019855866"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"290": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;3.8478355881793505,0%",
										"0;-35.737853339090464,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;79.99202019855866"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"291": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-1.0760822059103248,0%",
										"0;-34.86892666954526,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;79.99202019855866"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"292": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-1.0760822059103248,0%",
										"0;-34.86892666954526,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;79.99202019855866"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"293": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;3.8478355881793505,0%",
										"0;-35.737853339090464,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;79.99202019855866"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"294": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;1.878268470543503,0%",
										"0;-35.39028267127236,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;79.99202019855866"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"295": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-2.0608657647282485,0%",
										"0;-34.69514133563621,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;79.99202019855866"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"296": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;3.8478355881793505,0%",
										"0;-35.737853339090464,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;79.99202019855866"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"297": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-2.0608657647282485,0%",
										"0;-34.69514133563621,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;79.99202019855866"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"298": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;3.8478355881793505,0%",
										"0;-35.737853339090464,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;79.99202019855866"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/initial/3.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/StartIcon/0.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/initialLink/3.instance": "M448,279L454,313",
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/initialLink/3.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/ARuleIcon/2.instance": "M454.0130056620245,313.07369875147225L459.99992445869066,346.99957193258024"
					}
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/initialLink"
			},
			"4": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#800000",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "failLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						521.5406541582622,
						463.1457942227334
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;18.312278092006636,26.859912877570558%",
										"0;50.77953691907055,96.32520480232222%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;74.41907615174843"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"268": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;24.091790380145937,26.859912877570558%",
										"0;49.167942146416294,96.32520480232222%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;74.41907615174843"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"269": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;24.091790380145937,26.859912877570558%",
										"0;49.167942146416294,96.32520480232222%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;74.41907615174843"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"270": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;24.091790380145937,26.859912877570558%",
										"0;49.167942146416294,96.32520480232222%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;74.41907615174843"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"271": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;19.275530140029787,26.859912877570558%",
										"0;50.51093779029486,96.32520480232222%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;74.41907615174843"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"272": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;19.275530140029787,26.859912877570558%",
										"0;50.51093779029486,96.32520480232222%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;74.41907615174843"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;24.091790380145937,26.859912877570558%",
										"0;49.167942146416294,96.32520480232222%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;74.41907615174843"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;18.312278092006636,26.859912877570558%",
										"0;50.77953691907055,96.32520480232222%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;74.41907615174843"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"275": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8 l6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;22.165286284099466,26.859912877570558%",
										"0;49.70514040396773,96.32520480232222%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;74.41907615174843"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"276": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;24.091790380145937,26.859912877570558%",
										"0;49.167942146416294,96.32520480232222%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;74.41907615174843"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"277": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;19.275530140029787,26.859912877570558%",
										"0;50.51093779029486,96.32520480232222%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;74.41907615174843"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"278": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;22.165286284099466,26.859912877570558%",
										"0;49.70514040396773,96.32520480232222%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;74.41907615174843"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"279": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;19.275530140029787,26.859912877570558%",
										"0;50.51093779029486,96.32520480232222%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;74.41907615174843"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"280": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;24.091790380145937,26.859912877570558%",
										"0;49.167942146416294,96.32520480232222%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;74.41907615174843"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;18.312278092006636,26.859912877570558%",
										"0;50.77953691907055,96.32520480232222%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;74.41907615174843"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"282": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,5 l-10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;19.275530140029787,26.859912877570558%",
										"0;50.51093779029486,96.32520480232222%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;74.41907615174843"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"283": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-9.72439391814612,0%",
										"0;-53.48878986661191,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;74.41907615174837"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"284": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,5 l10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-9.72439391814612,0%",
										"0;-53.48878986661191,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;74.41907615174837"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"285": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-9.72439391814612,0%",
										"0;-53.48878986661191,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;74.41907615174837"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"286": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-4.908133678029969,0%",
										"0;-54.83178551049048,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;74.41907615174837"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"287": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-6.834637774076441,0%",
										"0;-54.29458725293904,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;74.41907615174837"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"288": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-10.68764596616927,0%",
										"0;-53.22019073783622,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;74.41907615174837"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"289": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-4.908133678029969,0%",
										"0;-54.83178551049048,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;74.41907615174837"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"290": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-4.908133678029969,0%",
										"0;-54.83178551049048,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;74.41907615174837"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"291": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-9.72439391814612,0%",
										"0;-53.48878986661191,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;74.41907615174837"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"292": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-9.72439391814612,0%",
										"0;-53.48878986661191,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;74.41907615174837"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"293": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-4.908133678029969,0%",
										"0;-54.83178551049048,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;74.41907615174837"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"294": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-6.834637774076441,0%",
										"0;-54.29458725293904,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;74.41907615174837"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"295": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-10.68764596616927,0%",
										"0;-53.22019073783622,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;74.41907615174837"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"296": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-4.908133678029969,0%",
										"0;-54.83178551049048,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;74.41907615174837"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"297": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-10.68764596616927,0%",
										"0;-53.22019073783622,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;74.41907615174837"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"298": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;-4.908133678029969,0%",
										"0;-54.83178551049048,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;74.41907615174837"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/fail/4.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/ARuleIcon/2.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink/4.instance": "M507,411L521.5406541582622,463.1457942227334",
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink/4.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/EndFailIcon/1.instance": "M521.520289102334,463.0727609187151L535.9999240581759,514.9997276569068"
					}
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/failLink"
			},
			"6": {
				"link-style": {
					"type": "map<string,string>",
					"value": {
						"stroke": "#008080",
						"stroke-dasharray": "",
						"stroke-opacity": 1,
						"stroke-width": 2
					}
				},
				"arrowHead": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "custom"
				},
				"arrowTail": {
					"type": "ENUM(circle-black,circle-black-large,circle-white,circle-white-large,diamond-black,diamond-black-large,diamond-white,diamond-white-large,triangle-black,triangle-black-large,triangle-white,triangle-white-large,arrow-black,arrow-black-large,arrow-empty,arrow-empty-large,custom)",
					"value": "arrow-black"
				},
				"typename": {
					"type": "string",
					"value": "successLink"
				},
				"position": {
					"type": "list<double>",
					"value": [
						268.7902190985726,
						388.467883047401
					]
				},
				"orientation": {
					"type": "double",
					"value": 0
				},
				"scale": {
					"type": "list<double>",
					"value": [
						1,
						1
					]
				},
				"mapper": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,csattr:val,...} */"
				},
				"parser": {
					"type": "code",
					"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
				},
				"$contents": {
					"type": "map<string,*>",
					"value": {
						"nodes": {
							"267": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 l3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;147.3439804961888,84.57280623213771%",
										"0;-33.85095741578584,53.361413455991666%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;32.249974164183634"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"268": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;150.54566530354833,84.57280623213771%",
										"0;-38.92532578971412,53.361413455991666%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;32.249974164183634"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"269": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;150.54566530354833,84.57280623213771%",
										"0;-38.92532578971412,53.361413455991666%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;32.249974164183634"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"270": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;150.54566530354833,84.57280623213771%",
										"0;-38.92532578971412,53.361413455991666%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;32.249974164183634"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"271": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;147.87759463074872,84.57280623213771%",
										"0;-34.69668547810727,53.361413455991666%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;32.249974164183634"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"272": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;147.87759463074872,84.57280623213771%",
										"0;-34.69668547810727,53.361413455991666%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;32.249974164183634"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"273": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;150.54566530354833,84.57280623213771%",
										"0;-38.92532578971412,53.361413455991666%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;32.249974164183634"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"274": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;147.3439804961888,84.57280623213771%",
										"0;-33.85095741578584,53.361413455991666%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;32.249974164183634"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"275": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8 l6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;149.4784370344285,84.57280623213771%",
										"0;-37.23386966507138,53.361413455991666%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;32.249974164183634"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"276": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,10 l-20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;150.54566530354833,84.57280623213771%",
										"0;-38.92532578971412,53.361413455991666%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;32.249974164183634"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"277": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;147.87759463074872,84.57280623213771%",
										"0;-34.69668547810727,53.361413455991666%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;32.249974164183634"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"278": {
								"segments": {
									"type": "string",
									"value": "m0,0 l20,8 l-20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;149.4784370344285,84.57280623213771%",
										"0;-37.23386966507138,53.361413455991666%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;32.249974164183634"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -8
									}
								}
							},
							"279": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;147.87759463074872,84.57280623213771%",
										"0;-34.69668547810727,53.361413455991666%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;32.249974164183634"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"280": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;150.54566530354833,84.57280623213771%",
										"0;-38.92532578971412,53.361413455991666%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;32.249974164183634"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -10
									}
								}
							},
							"281": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,4 l-10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;147.3439804961888,84.57280623213771%",
										"0;-33.85095741578584,53.361413455991666%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;32.249974164183634"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -4
									}
								}
							},
							"282": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,5 l-10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;147.87759463074872,84.57280623213771%",
										"0;-34.69668547810727,53.361413455991666%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;32.249974164183634"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowTail",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": 1,
										"yoffset": -5
									}
								}
							},
							"283": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;138.515818214901,0%",
										"0;17.073384875304725,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;120.54757174890702"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"284": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,5 l10,5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;138.515818214901,0%",
										"0;17.073384875304725,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;120.54757174890702"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"285": {
								"segments": {
									"type": "string",
									"value": "m0,0 l5,5 l-5,5 l-5,-5 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;138.515818214901,0%",
										"0;17.073384875304725,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;120.54757174890702"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"286": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;142.8218555283746,0%",
										"0;19.61465279801041,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;120.54757174890702"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"287": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8 l-6,-8 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;141.09944060298517,0%",
										"0;18.598145628928137,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;120.54757174890702"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"288": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 l-3,-4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;137.65461075220628,0%",
										"0;16.56513129076359,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;120.54757174890702"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"289": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;142.8218555283746,0%",
										"0;19.61465279801041,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;120.54757174890702"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"290": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,10 l20,10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;142.8218555283746,0%",
										"0;19.61465279801041,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;120.54757174890702"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"291": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;138.515818214901,0%",
										"0;17.073384875304725,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;120.54757174890702"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"292": {
								"r": {
									"type": "double",
									"value": 5
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;138.515818214901,0%",
										"0;17.073384875304725,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;120.54757174890702"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -5
									}
								}
							},
							"293": {
								"r": {
									"type": "double",
									"value": 10
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Circle",
								"position": {
									"type": "list<double>",
									"value": [
										"0;142.8218555283746,0%",
										"0;19.61465279801041,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;120.54757174890702"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "circle-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"294": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-20,8 l20,8"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;141.09944060298517,0%",
										"0;18.598145628928137,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;120.54757174890702"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -8
									}
								}
							},
							"295": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"fill-opacity": 0,
										"stroke-width": 1,
										"opacity": 0
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;137.65461075220628,0%",
										"0;16.56513129076359,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;120.54757174890702"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "arrow-empty",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"296": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;142.8218555283746,0%",
										"0;19.61465279801041,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;120.54757174890702"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-black-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							},
							"297": {
								"segments": {
									"type": "string",
									"value": "m0,0 l-10,4 l10,4 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#000000",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;137.65461075220628,0%",
										"0;16.56513129076359,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;120.54757174890702"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "triangle-black",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -4
									}
								}
							},
							"298": {
								"segments": {
									"type": "string",
									"value": "m0,0 l10,10 l-10,10 l-10,-10 z"
								},
								"style": {
									"type": "map<string,string>",
									"value": {
										"stroke": "#000000",
										"fill": "#ffffff",
										"opacity": 0,
										"stroke-width": 1
									}
								},
								"mapper": {
									"type": "code",
									"value": ""
								},
								"parser": {
									"type": "code",
									"value": "/* specify code that evaluates to an associative array of the form {...,attr:val,...} */"
								},
								"$type": "/Formalisms/__LanguageSyntax__/ConcreteSyntax/ConcreteSyntax/Path",
								"position": {
									"type": "list<double>",
									"value": [
										"0;142.8218555283746,0%",
										"0;19.61465279801041,0%"
									]
								},
								"orientation": {
									"type": "double",
									"value": "0;120.54757174890702"
								},
								"scale": {
									"type": "list<double>",
									"value": [
										1,
										1
									]
								},
								"arrow": "arrowHead",
								"arrowType": "diamond-white-large",
								"$linkDecoratorInfo": {
									"type": "map<string,double>",
									"value": {
										"xratio": -1,
										"yoffset": -10
									}
								}
							}
						},
						"edges": []
					}
				},
				"$asuri": {
					"type": "string",
					"value": "/Formalisms/__Transformations__/Transformation/MoTif/success/6.instance"
				},
				"$segments": {
					"type": "map<string,list<string>>",
					"value": {
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/ARuleIcon/2.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink/6.instance": "M403,403L367,464L264,395L268.7902190985726,388.467883047401",
						"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink/6.instance--/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/ARuleIcon/2.instance": "M268.7902190985726,388.467883047401L330,305L413.99974305652177,357.99983788090066"
					}
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons/successLink"
			}
		},
		"edges": [],
		"metamodels": [
			"/Formalisms/__Transformations__/Transformation/MoTif.defaultIcons"
		]
	},
	"asm": {
		"nodes": {
			"0": {
				"position": {
					"type": "list<int>",
					"value": [
						438,
						268
					]
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/Start"
			},
			"1": {
				"position": {
					"type": "list<int>",
					"value": [
						525,
						501
					]
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/EndFail"
			},
			"2": {
				"rule": {
					"type": "file<R_.*\\.model>",
					"value": "/Formalisms/WMS/OperationalSemantics/R_Update_Sources.model"
				},
				"name": {
					"type": "string",
					"value": "Update_Sources"
				},
				"alias": {
					"type": "string",
					"value": ""
				},
				"position": {
					"type": "list<int>",
					"value": [
						358,
						327
					]
				},
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/ARule"
			},
			"3": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/initial"
			},
			"4": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/fail"
			},
			"6": {
				"$type": "/Formalisms/__Transformations__/Transformation/MoTif/success"
			}
		},
		"edges": [
			{
				"src": "0",
				"dest": "3"
			},
			{
				"src": "3",
				"dest": "2"
			},
			{
				"src": "2",
				"dest": "4"
			},
			{
				"src": "4",
				"dest": "1"
			},
			{
				"src": "2",
				"dest": "6"
			},
			{
				"src": "6",
				"dest": "2"
			}
		],
		"metamodels": [
			"/Formalisms/__Transformations__/Transformation/MoTif"
		]
	}
}