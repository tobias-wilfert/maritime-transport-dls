//===========================================================================================================
// VALID MODELS
//===========================================================================================================
// crossroads
WMS WMS_TEST {
    Source source0 {
        rate = 1;
        out0 = segment0;
    }

    Source source1 {
        rate = 1;
        out0 = segment1;
    }

    Segment segment0 {
        in0 = source0;
        out0 = confluence;
    }

    Segment segment1 {
        in0 = source1;
        out0 = confluence;
    }

    Segment segment2 {
        in0 = confluence;
        out0 = sink0;
    }

    Segment segment3 {
        in0 = confluence;
        out0 = sink1;
    }

    Confluence confluence {
        in0 = segment0;
        in1 = segment1;
        out0 = segment2;
        out1 = segment3;
    }

    Sink sink0 {
        in0 = segment2;
    }

    Sink sink1 {
        in0 = segment3;
    }
    
    Schedule schedule {
        list = [sink0, segment2, sink1, segment3, confluence, segment1, segment0, source0, source1];
    }
}

// small instant destroy
WMS WMS_TEST {
    Source source0 {
        rate = 1;
        out0 = sink0;
    }

    Sink sink0 {
        in0 = source0;
    }
    
    Schedule schedule {
        list = [sink0, source0];
    }
}

// double instant destroy
WMS WMS_TEST {
    Source source0 {
        rate = 1;
        out0 = sink0;
    }

    Sink sink0 {
        in0 = source0;
    }

    Source source1 {
        rate = 1;
        out0 = sink1;
    }

    Sink sink1 {
        in0 = source1;
    }

    Schedule schedule {
        list = [sink0, source0, sink1, source1];
    }
}

// double line 
WMS WMS_TEST {
    Source source0 {
        rate = 1;
        out0 = segment0;
    }

    Segment segment0 {
        in0 = source0;
        out0 = sink0;
    }

    Sink sink0 {
        in0 = segment0;
    }

    Source source1 {
        rate = 1;
        out0 = segment1;
    }

    Segment segment1 {
        in0 = source1;
        out0 = sink1;
    }

    Sink sink1 {
        in0 = segment1;
    }

    Schedule schedule {
        list = [sink0, segment0, source0, sink1, segment1, source1];
    }
}

// Simple confluence connection example (alternating each tick)
WMS WMS_TEST {
    Source source0 {
        rate = 1;
        out0 = confluence0;
    }

    Source source1 {
        rate = 1;
        out0 = confluence0;
    }

    Confluence confluence0 {
        in0 = source0;
        in1 = source1;
        out0 = sink0;
        out1 = sink1;
    }

    Sink sink0 {
        in0 = confluence0;
    }

    Sink sink1 {
        in0 = confluence0;
    }

    Schedule schedule {
        list = [sink0, sink1, confluence0, source0, source1];
    }
}

// Simple confluence connection example (differing rates)
// TODO check this example; not sure it is working the way it should
WMS WMS_TEST {
    Source source0 {
        rate = 3;
        out0 = confluence0;
    }

    Source source1 {
        rate = 1;
        out0 = confluence0;
    }

    Confluence confluence0 {
        in0 = source0;
        in1 = source1;
        out0 = sink0;
        out1 = sink1;
    }

    Sink sink0 {
        in0 = confluence0;
    }

    Sink sink1 {
        in0 = confluence0;
    }

    Schedule schedule {
        list = [sink0, sink1, confluence0, source0, source1];
    }
}

// Simple line example
WMS WMS_TEST {
    Source source0 {
        rate = 2;
        out0 = segment0;
    }

    Segment segment0 {
        in0 = source0;
        out0 = segment1;
    }

    Segment segment1 {
        in0 = segment0;
        out0 = sink0;
    }

    Sink sink0 {
        in0 = segment1;
    }

    Schedule schedule {
        list = [sink0, segment1, segment0, source0];
    }
}

// Longer line - scheduling 1
WMS WMS_TEST {
    Source source0 {
        rate = 2;
        out0 = segment0;
    }

    Segment segment0 {
        in0 = source0;
        out0 = segment1;
    }

    Segment segment1 {
        in0 = segment0;
        out0 = segment2;
    }

    Segment segment2 {
        in0 = segment1;
        out0 = sink0;
    }

    Sink sink0 {
        in0 = segment1;
    }

    Schedule schedule {
        list = [sink0, segment2, segment1, segment0, source0];
    }
}

// Longer line - scheduling 2
// TODO - by different scheduling, a ship COULD move multiple tiles at once :(
WMS WMS_TEST {
    Source source0 {
        rate = 2;
        out0 = segment0;
    }

    Segment segment0 {
        in0 = source0;
        out0 = segment1;
    }

    Segment segment1 {
        in0 = segment0;
        out0 = segment2;
    }

    Segment segment2 {
        in0 = segment1;
        out0 = sink0;
    }

    Sink sink0 {
        in0 = segment2;
    }

    Schedule schedule {
        list = [sink0, segment0, segment1, segment2, source0];
    }
}

//===========================================================================================================
// INVALID MODELS
//===========================================================================================================
// correct count for sinks and sources, but 2 wrongly linked ones 
WMS WMS_TEST {
    Source source0 {
        rate = 1;
        out0 = sink0;
    }

    Sink sink0 {
        in0 = source0;
    }

    Sink sink1 {
        in0 = source0;
    }

    Source source1 {
        rate = 2;
        out0 = sink0;
    }

    Schedule schedule {
        list = [sink1, sink0, source1, source0];
    }
}

// invalid rate for source
WMS WMS_TEST {
    Source source0 {
        rate = -1;
        out0 = sink0;
    }

    Sink sink0 {
        in0 = source0;
    }
    
    Schedule schedule {
        list = [sink0, source0];
    }
}

// invalid count for sinks and sources + invalid rate for source + in-out mismatch
WMS WMS_TEST {
    Source source0 {
        rate = -1;
        out0 = sink0;
    }

    Sink sink0 {
        in0 = source0;
    }

    Sink sink1 {
        in0 = source0;
    }

    Schedule schedule {
        list = [sink0, sink1, source0];
    }
}

// CONSTRAINT BREAKER
// Both Sources are unhappy, one is unhappy because it is not referenced in confluence0 the other
// is not happy because it is referenced twice
// Also confluence is unhappy as both its in's reference the same node
WMS WMS_TEST {
    Source source0 {
        rate = -1;
        out0 = confluence0;
    }

    Source source1 {
        rate = 2;
        cooldown = 3;
        out0 = confluence0;
    }

    Confluence confluence0 {
        in0 = source0;
        in1 = source0;
        out0 = sink0;
        out1 = sink1;
    }

    Sink sink0 {
        in0 = confluence0;
    }

    Sink sink1 {
        in0 = confluence0;
    }

    Sink sink2 {
        in0 = sink2;
    }

    Schedule schedule {
        list = [sink0, sink1, confluence0, source1, source0, sink1];
    }
}