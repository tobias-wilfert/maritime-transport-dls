/// Water Modeling System
Model WMS {
    /// Base class for all Nodes that can contain a Watercraft
    abstract Node Shippable {
        has_watercraft: boolean; // TODO: Init to false
    }

    // TODO: Not yet supper sure about this, 
    // since I guess we need restrict the #connections :thinking:

    /// Base class for all Nodes that have an out-connection
    abstract Node InNode {
        in_connection: OutNode[*]; // Fix for now
    }

    /// Base class for all Nodes that have an in-connection
    abstract Node OutNode {
        out_connection: InNode[*];
    }

    Node Sink[0..*]: InNode {
        /// Counter of how many Watercraft this has consumed so far.
        counter: int;

        C_counter: $ self.counter >= 0 $ /// Counter needs to be positive
    }

    Node Source[0..*]: OutNode {
        /// Counter of how many Watercraft this has generated so far
        counter: int; // TODO: Init to 0
        /// Number of steps that the need to be waited till another
        /// Watercraft is generated 
        rate: int;
        /// Counter for the Rate that goes to 0, if it hits zero a new
        /// Watercraft can be spawned and the counter resets
        cooldown: int;

        C_counter: $ self.counter >= 0 $ /// Counter needs to be positive
        C_rate: $ self.rate > 0 $ /// Rate needs to be strictly positive
        C_cooldown_lower_bound: $ self.cooldown >= 0 $ /// Cooldown need to be positive
        C_cooldown_upper_bound: $ self.cooldown <= self.rate $ /// Cooldown can not exceed rate
    }

    Node Segment[0..*]: Shippable, InNode, OutNode {}

    Node Confluence[0..*]: Shippable, InNode, OutNode {
        /// Indicates if it is the turn to check the first direction
        first_turn: boolean;

        // TODO: Think if we want one big set or rather
        // two smaller sets with each one connection
    }
    
    // TODO: Add more constraints
    // Need check for the edges
    // Need check to make sure #Sink == #Source
}

WMS WMS_TETS {
    Sink sink {
        counter = 0;
    }
}